<?php

namespace backend\controllers;

use Yii;
use backend\models\GiftVoucher;
use backend\models\User;
use backend\models\GiftVoucherSearch;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;
use yii\filters\AccessControl;
use yii\web\UploadedFile;
use yii\web\ForbiddenHttpException;

/**
 * GiftVoucherController implements the CRUD actions for GiftVoucher model.
 */
class GiftVoucherController extends Controller
{
    /**
     * {@inheritdoc}
     */
    public function beforeAction($action)
    {
        $role = (Yii::$app->user->isGuest)?'':Yii::$app->user->identity->role;
        if($role != 'super-admin'){
            throw new ForbiddenHttpException('You are not allowed to perform this action.');
        }
        return parent::beforeAction($action);
    }
    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST','GET'],
                ],
            ],
            'access' => [
                'class' => AccessControl::className(),
                'only' => ['index','create','update','view','delete'],
                'rules' => [
                    [
                        'actions' => ['index','create','update','delete','view'],
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
                'denyCallback' => function($rule, $action) {
                return $this->goHome();
                }
                ]
        ];
    }

    /**
     * Lists all GiftVoucher models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new GiftVoucherSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Creates a new GiftVoucher model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new GiftVoucher();
        $modelUser = new User;
        $modelUser->setScenario('voucher-admin');
        if ($model->load(Yii::$app->request->post()) && $modelUser->load(Yii::$app->request->post()) && $model->validate() && $modelUser->validate()) {
            $imageUrl = UploadedFile::getInstances($model,'image_url');
            $imageBgUrl = UploadedFile::getInstances($model,'image_bg_url');
            if($imageUrl && !empty($imageUrl)){
                $imageLocation = Yii::$app->params['upload_path_voucher_images'];
                $imageLocationBg = Yii::$app->params['upload_path_voucher_images_bg'];
                $modelUser = new User;
                $saveImage = $modelUser->uploadAndSave($imageUrl,$imageLocation);
                $saveImageBg = $modelUser->uploadAndSave($imageBgUrl,$imageLocationBg);
                if($saveImageBg){

                    $model->image_bg_url = $saveImageBg;
                }
                if($saveImage){

                    $model->image_url = $saveImage;
                }
            }            
            // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
            // $ch = curl_init();

            // curl_setopt($ch, CURLOPT_URL, 'https://api.razorpay.com/v1/beta/accounts');
            // curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            // curl_setopt($ch, CURLOPT_POST, 1);
            // curl_setopt($ch, CURLOPT_POSTFIELDS, "{\n 
            //     \"name\":\"$modelUser->name\",\n           
            //     \"email\":\"$modelUser->email\",\n           
            //     \"tnc_accepted\":true,\n      
            //     \"bank_account\":{\n              
            //         \"ifsc_code\":\"$model->account_ifsc\",\n              
            //         \"beneficiary_name\":\"$model->account_name\",\n              
            //         \"account_type\":\"current\",\n              
            //         \"account_number\":$model->account_number\n           
            //     }\n        
            // }");
            // curl_setopt($ch, CURLOPT_USERPWD, 'rzp_test_gnORUZc76xrfhJ' . ':' . 'f8Je2MklZqnFAj9oESC5UzTF');

            // $headers = array();
            // $headers[] = 'Content-Type: application/json';
            // curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

            // $result = curl_exec($ch);
            // if (curl_errno($ch)) {
            //     echo 'Error:' . curl_error($ch);
            // }
            // curl_close($ch);

            // echo "<pre>";print_r($result);exit;
            $post = Yii::$app->request->post();
            $model->save(false);
            $modelUser->password_hash = Yii::$app->getSecurity()->generatePasswordHash($post['User']['new_password']);
            $modelUser->role = 'voucher-admin';
            $modelUser->name = $post['User']['name'];
            $modelUser->username = $post['User']['email'];
            $modelUser->email = $post['User']['email'];
            $modelUser->save(false);
            $model->user_id = $modelUser->id;
            $model->vchr_terms_conditions= $post['GiftVoucher']['vchr_terms_conditions'];
            $model->save(false);
            yii::$app->session->setFlash('success','Gift Voucher Created Successfully');
            return $this->redirect(['index']);
        }

        return $this->render('create', [
            'model' => $model,
            'modelUser' => $modelUser
        ]);
    }

    /**
     * Updates an existing GiftVoucher model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);
        $modelUser = User::find()->where(['status'=>1,'id'=>$model->user_id])->one();
        $image = $model->image_url;
        $modelUser->setScenario('voucher-admin-update');
        if ($model->load(Yii::$app->request->post()) && $modelUser->load(Yii::$app->request->post()) && $model->validate() && $modelUser->validate()) {
            $imageUrl = UploadedFile::getInstances($model,'image_url');
            if($imageUrl && !empty($imageUrl)){
                $imageLocation = Yii::$app->params['upload_path_voucher_images'];
                $modelUser = new User;
                $saveImage = $modelUser->uploadAndSave($imageUrl,$imageLocation);
                if($saveImage){
                    $model->image_url = $saveImage;
                }
            }else{
                $model->image_url = $image;
            }
            $model->save(false);
            if($modelUser->new_password){
                $modelUser->password_hash = Yii::$app->getSecurity()->generatePasswordHash($modelUser->new_password);
            }
            $modelUser->role = 'voucher-admin';
            $modelUser->username = $modelUser->email;
            $modelUser->save(false);
            yii::$app->session->setFlash('success','Gift voucher updated successfully');
            return $this->redirect(['index']);
        }

        return $this->render('update', [
            'model' => $model,
            'modelUser' => $modelUser
        ]);
    }

    /**
     * Deletes an existing GiftVoucher model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionDelete($id)
    {
        $model = $this->findModel($id);
        $model->status = 0;
        $model->save(false);

        yii::$app->session->setFlash('success','Gift voucher deleted successfully');
        return $this->redirect(['index']);
    }

    /**
     * Finds the GiftVoucher model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return GiftVoucher the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = GiftVoucher::findOne($id)) !== null) {
            return $model;
        }

        throw new NotFoundHttpException('The requested page does not exist.');
    }

    public function actionView($id){
        $model = $this->findModel($id);
        return $this->render('view',[
            'model' => $model
        ]);
    }
}
